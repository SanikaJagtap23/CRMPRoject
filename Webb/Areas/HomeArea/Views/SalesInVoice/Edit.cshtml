@using Domine.Enums
@using Newtonsoft.Json
@model SalesInvoiceDto
<div class="card">
    <div class="card-body">
        <h4 class="card-title">Create Sales Invoice</h4>
        <form class="forms-sample" asp-action="Edit" method="post">
            <input type="hidden"asp-for="SalesInvoiceID" />

            <div class="form-group">
                <label asp-for="InVoiceNo">Invoice No</label>
                <input asp-for="InVoiceNo" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="SalesOrderDate">Sales Order Date</label>
                <input asp-for="SalesOrderDate" type="date" class="form-control" />
            </div>

            <div class="form-group">
                @* <label class="form-label">Customer or Party</label>
                <select class="form-select" asp-for="CustomerOrPartyID" asp-items=ViewBag.CustParties>
                <option>Select Customer or Party</option>
                </select> *@

                <label for="CustomerID">Customer or Party</label>
                <select id="CustomerOrPartyID" name="CustomerOrPartyID" class="form-select" asp-items="Model.CustParties">
                    <option value="">Select Customer or Party</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="SalesOrderNo">Sales Order No</label>
                <input asp-for="SalesOrderNo" class="form-control" />
            </div>

            <div class="form-group">
                <label class="form-label">Invoice Payment Type</label>
                <select asp-for="InVoicePaymentType" asp-items="@Html.GetEnumSelectList<InVoicePaymentTypeEnum>()" class="form-control"></select>
            </div>

            <hr />
            <h5>Items</h5>
            <table class="table" id="itemsTable">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>Free Sample</th>
                        <th>Subtotal</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            <button type="button" id="addItem" class="btn btn-success">Add Item</button>

            <div class="form-group mt-3">
                <label>Total Amount</label>
                <input id="TotalAmount" asp-for="TotalAmount" class="form-control" readonly />
            </div>

            <div class="form-group mt-3">
                @* <label class="form-label">Discount</label>
                <select id="DiscountID" class="form-select">
                <option value="0" data-discount="0">No Discount</option>
                @if (ViewBag.Discounts != null && ViewBag.Discounts.Items.Any())
                {
                foreach (var discount in ViewBag.Discounts)
                {
                <option value="@discount.Value" data-discount="@discount.Text">@discount.Text</option>
                }
                }
                </select> *@

                <label for="DiscountID">Discount</label>
                <select id="DiscountID" name="DiscountID" class="form-select" asp-for="DiscountID">
                    <option value="0" data-discount="0">No Discount</option>
                    @foreach (var discount in Model.Discounts)
                    {
                        <option value="@discount.Value" data-discount="@discount.Text">@discount.Text</option>
                    }
                </select>
            </div>


            <div class="form-group mt-3">
                <label>Grand Total</label>
                <input id="GrandTotal" class="form-control" readonly />
            </div>

            <div class="form-group mt-3">
                <label asp-for="TermAndCondition">Terms and Condition</label>
                <input asp-for="TermAndCondition" class="form-control" />
            </div>

            <button type="button" id="calculateTotal" class="btn btn-primary mt-3">Calculate</button>
            <button type="submit" class="btn btn-success mt-3">Submit</button>
        </form>
    </div>
</div>

<script>
    var invoiceItems = @Html.Raw(Json.Serialize(Model.InvoiceItems));
    console.log("invoiceItems", invoiceItems);

    document.getElementById("addItem").addEventListener("click", function () {
        let tbody = document.querySelector("#itemsTable tbody");
        let rowIndex = tbody.rows.length;  // Get the current number of rows in the table
        let row = document.createElement("tr");

        row.innerHTML = `
                <td>
                    <select id="ItemID" name="Items[${rowIndex}].ItemID" class="form-select">
                        <option value="0">Select Item</option>
                        ${invoiceItems.map(item => `<option value="${item.value}">${item.text}</option>`).join('')}
                    </select>
                </td>
                <td><input type="number" name="Items[${rowIndex}].Qty" class="form-control qty" value="1" min="1" /></td>
                <td><input type="number" name="Items[${rowIndex}].Price" class="form-control price" value="0" /></td>
                <td><input type="checkbox" name="Items[${rowIndex}].IsFreeOrSample" class="form-check-input" /></td>
                <td><input type="text" name="Items[${rowIndex}].Subtotal" class="form-control subtotal" readonly /></td>
                <td><button type="button" class="btn btn-danger remove-item">X</button></td>
            `;
        tbody.appendChild(row);
    });

    document.addEventListener("click", function (e) {
        if (e.target.classList.contains("remove-item")) {
            e.target.closest("tr").remove();
            calculateTotal();
        }
    });

    document.getElementById("calculateTotal").addEventListener("click", calculateTotal);
    document.getElementById("DiscountID").addEventListener("change", calculateTotal);

    function calculateTotal() {
        let total = 0;
        console.log("total", total);
        document.querySelectorAll("#itemsTable tbody tr").forEach(row => {
            let qty = parseFloat(row.querySelector(".qty").value);
            let price = parseFloat(row.querySelector(".price").value);
            let subtotal = qty * price;
            row.querySelector(".subtotal").value = subtotal.toFixed(2);
            total += subtotal;
            console.log("qty", qty);
            console.log("price", price);
            console.log("subtotal", subtotal);

        });

        document.getElementById("TotalAmount").value = total.toFixed(2);

        console.log("TotalAmount", total.toFixed(2));

        let discountSelect = document.getElementById("DiscountID");
        let discountValue = parseFloat(discountSelect.options[discountSelect.selectedIndex].getAttribute("data-discount"));
        console.log("discountValue", discountValue);

        let discountAmount = 0;

        if (discountValue < 100) {

            discountAmount = (total * discountValue) / 100;
        } else {

            discountAmount = discountValue;
        }

        let grandTotal = total - discountAmount;
        console.log("grandTotal", grandTotal);
        document.getElementById("GrandTotal").value = grandTotal.toFixed(2);
    }
</script>
